#
# Swift SonarQube Plugin - Enables analysis of Swift and Objective-C projects into SonarQube.
#

##########################
# Required configuration #
##########################

# Project Details
sonar.projectKey=
sonar.projectName=
sonar.host.url=

# Project description
sonar.projectDescription=

sonar.language=swift

# Exclude directories
sonar.exclusions=**/*.xml,fastlane/**/*,**/*.html,**/*.css,ci_scripts/**/*

# Xcode project configuration (.xcodeproj)
# and use the later to specify which project(s) to include in the analysis (comma separated list)
# Specify either xcodeproj or xcodeproj + xcworkspace
sonar.swift.project=

# Scheme to build your application
sonar.swift.appScheme=
# Scheme to build and run your tests (comment following line of you don't have any tests)
sonar.swift.testScheme=
 
##########################
# Optional configuration #
##########################

# Encoding of the source code
sonar.sourceEncoding=UTF-8

# JUnit report generated by run-sonar.sh is stored in sonar-reports/TEST-report.xml
# Change it only if you generate the file on your own
# The XML files have to be prefixed by TEST- otherwise they are not processed 
# sonar.junit.reportsPath=sonar-reports/

# Cobertura report generated by run-sonar.sh is stored in sonar-reports/coverage.xml
# Change it only if you generate the file on your own
# sonar.objectivec.coverage.reportPattern=sonar-reports/coverage*.xml

# OCLint report generated by run-sonar.sh is stored in sonar-reports/oclint.xml
# Change it only if you generate the file on your own
# sonar.objectivec.oclint.report=sonar-reports/oclint.xml

# Paths to exclude from coverage report (tests, 3rd party libraries etc.)
# sonar.objectivec.excludedPathsFromCoverage=pattern1,pattern2
sonar.swift.excludedPathsFromCoverage=.*Tests.*

# Project SCM settings
# sonar.scm.enabled=true
# sonar.scm.url=scm:git:https://...
sonar.swift.coverageReportPaths=sonarqube-generic-coverage.xml